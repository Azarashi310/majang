!function(t){function n(s){if(i[s])return i[s].exports;var r=i[s]={exports:{},id:s,loaded:!1};return t[s].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}var i={};return n.m=t,n.c=i,n.p="./dist/",n(0)}([function(t,n,i){var s,r;r=i(1),s=i(2),$(function(){var t,n,i;return t=io.connect("http://localhost:3000"),n=new s($("#trump .mycards"),$("#trump .enemycards"),t),n.init(),i=new r(t,$("#util .userlist")),i.init()})},function(t,n){var i;i=function(){function t(t,n){this.socket=t,this.clientList,this.userlist=n}return t.prototype.init=function(){var t;return t=this,this.socket.on("clientList",function(n){return t.clientList=n,t.setLists()})},t.prototype.setLists=function(){var t;return t=this,this.$list,$.each(this.clientList,function(n,i){return this.$list=$('<li class="user">').text(i),t.userlist.append(this.$list)})},t}(),t.exports=i},function(t,n){var i;i=function(){function t(t,n,i){this.cards=t,this.enemyCards=n,this.myCards=[],this.initCard=5,this.socket=i}return t.prototype.init=function(){var t;return t=this,this.socket.on("deal",function(n){return console.log(n),t.myCards.push(n)}),this.socket.emit("feed",5),this.socket.on("create",function(){return $.each(t.myCards,function(n,i){var s,r,e,o;return o=i[1],e=i[0],s=$('<li class="card">'),r=$('<li class="card enemy">'),s.attr("data-kind",e).attr("data-num",o),t.enemyCards.append(r),t.cards.append(s)})})},t}(),t.exports=i}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY2xpZW50L2pzL2NsaWVudC5taW4uanMiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svYm9vdHN0cmFwIDBiOTdkMGVlNWVkNDM5ZmEyNGNlIiwid2VicGFjazovLy8uL2Rldi9jbGllbnQvanMvY2xpZW50LmNvZmZlZSIsIndlYnBhY2s6Ly8vLi9kZXYvY2xpZW50L2pzL191dGlsL19nZXRDbGllbnRMSXN0LmNvZmZlZSIsIndlYnBhY2s6Ly8vLi9kZXYvY2xpZW50L2pzL19nYW1lL190cnVtcC5jb2ZmZWUiXSwibmFtZXMiOlsibW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImluc3RhbGxlZE1vZHVsZXMiLCJleHBvcnRzIiwibW9kdWxlIiwiaWQiLCJsb2FkZWQiLCJjYWxsIiwibSIsImMiLCJwIiwiVHJ1bXAiLCJVc2VyTGlzdCIsIiQiLCJzb2NrZXQiLCJ0cnVtcCIsInVzZXJMaXN0IiwiaW8iLCJjb25uZWN0IiwiaW5pdCIsIkdldENsaWVudExpc3QiLCJ1c2VybGlzdCIsInRoaXMiLCJjbGllbnRMaXN0IiwicHJvdG90eXBlIiwiX3RoaXMiLCJvbiIsInNldExpc3RzIiwiJGxpc3QiLCJlYWNoIiwiaW5kZXgiLCJ2YWx1ZSIsInRleHQiLCJhcHBlbmQiLCJteWNhcmRzIiwiZW5lbXljYXJkcyIsImNhcmRzIiwiZW5lbXlDYXJkcyIsIm15Q2FyZHMiLCJpbml0Q2FyZCIsImNhcmQiLCJjb25zb2xlIiwibG9nIiwicHVzaCIsImVtaXQiLCIkY2FyZCIsIiRlbmVteWNhcmQiLCJjYXJka2luZCIsIm51bWJlciIsImF0dHIiXSwibWFwcGluZ3MiOiJDQUFTLFNBQVVBLEdDSW5CLFFBQUFDLEdBQUFDLEdBR0EsR0FBQUMsRUFBQUQsR0FDQSxNQUFBQyxHQUFBRCxHQUFBRSxPQUdBLElBQUFDLEdBQUFGLEVBQUFELElBQ0FFLFdBQ0FFLEdBQUFKLEVBQ0FLLFFBQUEsRUFVQSxPQU5BUCxHQUFBRSxHQUFBTSxLQUFBSCxFQUFBRCxRQUFBQyxJQUFBRCxRQUFBSCxHQUdBSSxFQUFBRSxRQUFBLEVBR0FGLEVBQUFELFFBdkJBLEdBQUFELEtBcUNBLE9BVEFGLEdBQUFRLEVBQUFULEVBR0FDLEVBQUFTLEVBQUFQLEVBR0FGLEVBQUFVLEVBQUEsVUFHQVYsRUFBQSxLRE1NLFNBQVNJLEVBQVFELEVBQVNILEdFM0NoQyxHQUFBVyxHQUFBQyxJQUFXWixFQUFRLEdBQ25CVyxFQUFRWCxFQUFRLEdBQ2hCYSxFQUFFLFdBRUEsR0FBQUMsR0FBQUMsRUFBQUMsQ0ZxREMsT0VyRERGLEdBQVNHLEdBQUdDLFFBQVEseUJBRXBCSCxFQUFZLEdBQUFKLEdBQU1FLEVBQUUsbUJBQW1CQSxFQUFFLHNCQUFzQkMsR0FDL0RDLEVBQU1JLE9BRU5ILEVBQWUsR0FBQUosR0FBU0UsRUFBT0QsRUFBRSxvQkFDakNHLEVBQVNHLFVGcURMLFNBQVNmLEVBQVFELEdHaEV2QixHQUFBaUIsRUFBTUEsR0FBQSxXQUNTLFFBQUFBLEdBQUNOLEVBQU9PLEdBQ25CQyxLQUFDUixPQUFTQSxFQUNWUSxLQUFDQyxXQUNERCxLQUFDRCxTQUFXQSxFSDBGYixNQW5CQUQsR0FBY0ksVUd0RWZMLEtBQU0sV0FDSixHQUFBTSxFSHdFQyxPR3hFREEsR0FBUUgsS0FDUkEsS0FBQ1IsT0FBT1ksR0FBRyxhQUFhLFNBQUNILEdIeUV0QixNR3hFREUsR0FBTUYsV0FBYUEsRUFDbkJFLEVBQU1FLGNIMkVUUCxFQUFjSSxVRzFFZkcsU0FBVSxXQUNSLEdBQUFGLEVINkVDLE9HN0VEQSxHQUFRSCxLQUNSQSxLQUFDTSxNQUNEZixFQUFFZ0IsS0FBS1AsS0FBQ0MsV0FBVyxTQUFDTyxFQUFNQyxHSDZFdkIsTUc1RURULE1BQUNNLE1BQVFmLEVBQUUscUJBQXFCbUIsS0FBS0QsR0FDckNOLEVBQU1KLFNBQVNZLE9BQU9YLEtBQUNNLFVIK0VuQlIsS0c3RVZoQixFQUFPRCxRQUFVaUIsR0hzRlgsU0FBU2hCLEVBQVFELEdJdkd2QixHQUFBUSxFQUFNQSxHQUFBLFdBQ1MsUUFBQUEsR0FBQ3VCLEVBQVFDLEVBQVdyQixHQUMvQlEsS0FBQ2MsTUFBUUYsRUFDVFosS0FBQ2UsV0FBYUYsRUFDZGIsS0FBQ2dCLFdBQ0RoQixLQUFDaUIsU0FBVyxFQUNaakIsS0FBQ1IsT0FBU0EsRUpvSVgsTUF0QkFILEdBQU1hLFVJN0dQTCxLQUFNLFdBQ0osR0FBQU0sRUpvSEMsT0lwSERBLEdBQVFILEtBQ1JBLEtBQUNSLE9BQU9ZLEdBQUcsT0FBTyxTQUFDYyxHSmdIaEIsTUkvR0RDLFNBQVFDLElBQUlGLEdBQ1pmLEVBQU1hLFFBQVFLLEtBQUtILEtBQ3JCbEIsS0FBQ1IsT0FBTzhCLEtBQUssT0FBTyxHQUNwQnRCLEtBQUNSLE9BQU9ZLEdBQUcsU0FBUyxXSmdIakIsTUkvR0RiLEdBQUVnQixLQUFLSixFQUFNYSxRQUFTLFNBQUNSLEVBQU9DLEdBQzVCLEdBQUFjLEdBQUFDLEVBQUFDLEVBQUFDLENKc0hDLE9JdEhEQSxHQUFTakIsRUFBTSxHQUNmZ0IsRUFBV2hCLEVBQU0sR0FDakJjLEVBQVFoQyxFQUFFLHFCQUNWaUMsRUFBYWpDLEVBQUUsMkJBQ2ZnQyxFQUFNSSxLQUFLLFlBQVlGLEdBQVVFLEtBQUssV0FBV0QsR0FDakR2QixFQUFNWSxXQUFXSixPQUFPYSxHQUN4QnJCLEVBQU1XLE1BQU1ILE9BQU9ZLFFKcUhqQmxDLEtJcEhWUCxFQUFPRCxRQUFVUSIsImZpbGUiOiJjbGllbnQvanMvY2xpZW50Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKioqKiovIChmdW5jdGlvbihtb2R1bGVzKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcbi8qKioqKiovIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbi8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbi8qKioqKiovIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGV4cG9ydHM6IHt9LFxuLyoqKioqKi8gXHRcdFx0aWQ6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bG9hZGVkOiBmYWxzZVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4vKioqKioqLyBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuLyoqKioqKi8gXHR9XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi4vZGlzdC9cIjtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLyoqKioqKi8gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qKioqKiovIH0pXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gKFtcbi8qIDAgKi9cbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdHZhciBUcnVtcCwgVXNlckxpc3Q7XG5cdFxuXHRVc2VyTGlzdCA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG5cdFxuXHRUcnVtcCA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG5cdFxuXHQkKGZ1bmN0aW9uKCkge1xuXHQgIHZhciBzb2NrZXQsIHRydW1wLCB1c2VyTGlzdDtcblx0ICBzb2NrZXQgPSBpby5jb25uZWN0KCdodHRwOi8vbG9jYWxob3N0OjMwMDAnKTtcblx0ICB0cnVtcCA9IG5ldyBUcnVtcCgkKCcjdHJ1bXAgLm15Y2FyZHMnKSwgJCgnI3RydW1wIC5lbmVteWNhcmRzJyksIHNvY2tldCk7XG5cdCAgdHJ1bXAuaW5pdCgpO1xuXHQgIHVzZXJMaXN0ID0gbmV3IFVzZXJMaXN0KHNvY2tldCwgJCgnI3V0aWwgLnVzZXJsaXN0JykpO1xuXHQgIHJldHVybiB1c2VyTGlzdC5pbml0KCk7XG5cdH0pO1xuXG5cbi8qKiovIH0sXG4vKiAxICovXG4vKioqLyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHR2YXIgR2V0Q2xpZW50TGlzdDtcblx0XG5cdEdldENsaWVudExpc3QgPSAoZnVuY3Rpb24oKSB7XG5cdCAgZnVuY3Rpb24gR2V0Q2xpZW50TGlzdChzb2NrZXQsIHVzZXJsaXN0KSB7XG5cdCAgICB0aGlzLnNvY2tldCA9IHNvY2tldDtcblx0ICAgIHRoaXMuY2xpZW50TGlzdDtcblx0ICAgIHRoaXMudXNlcmxpc3QgPSB1c2VybGlzdDtcblx0ICB9XG5cdFxuXHQgIEdldENsaWVudExpc3QucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbigpIHtcblx0ICAgIHZhciBfdGhpcztcblx0ICAgIF90aGlzID0gdGhpcztcblx0ICAgIHJldHVybiB0aGlzLnNvY2tldC5vbignY2xpZW50TGlzdCcsIGZ1bmN0aW9uKGNsaWVudExpc3QpIHtcblx0ICAgICAgX3RoaXMuY2xpZW50TGlzdCA9IGNsaWVudExpc3Q7XG5cdCAgICAgIHJldHVybiBfdGhpcy5zZXRMaXN0cygpO1xuXHQgICAgfSk7XG5cdCAgfTtcblx0XG5cdCAgR2V0Q2xpZW50TGlzdC5wcm90b3R5cGUuc2V0TGlzdHMgPSBmdW5jdGlvbigpIHtcblx0ICAgIHZhciBfdGhpcztcblx0ICAgIF90aGlzID0gdGhpcztcblx0ICAgIHRoaXMuJGxpc3Q7XG5cdCAgICByZXR1cm4gJC5lYWNoKHRoaXMuY2xpZW50TGlzdCwgZnVuY3Rpb24oaW5kZXgsIHZhbHVlKSB7XG5cdCAgICAgIHRoaXMuJGxpc3QgPSAkKCc8bGkgY2xhc3M9XCJ1c2VyXCI+JykudGV4dCh2YWx1ZSk7XG5cdCAgICAgIHJldHVybiBfdGhpcy51c2VybGlzdC5hcHBlbmQodGhpcy4kbGlzdCk7XG5cdCAgICB9KTtcblx0ICB9O1xuXHRcblx0ICByZXR1cm4gR2V0Q2xpZW50TGlzdDtcblx0XG5cdH0pKCk7XG5cdFxuXHRtb2R1bGUuZXhwb3J0cyA9IEdldENsaWVudExpc3Q7XG5cblxuLyoqKi8gfSxcbi8qIDIgKi9cbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5cdHZhciBUcnVtcDtcblx0XG5cdFRydW1wID0gKGZ1bmN0aW9uKCkge1xuXHQgIGZ1bmN0aW9uIFRydW1wKG15Y2FyZHMsIGVuZW15Y2FyZHMsIHNvY2tldCkge1xuXHQgICAgdGhpcy5jYXJkcyA9IG15Y2FyZHM7XG5cdCAgICB0aGlzLmVuZW15Q2FyZHMgPSBlbmVteWNhcmRzO1xuXHQgICAgdGhpcy5teUNhcmRzID0gW107XG5cdCAgICB0aGlzLmluaXRDYXJkID0gNTtcblx0ICAgIHRoaXMuc29ja2V0ID0gc29ja2V0O1xuXHQgIH1cblx0XG5cdCAgVHJ1bXAucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbigpIHtcblx0ICAgIHZhciBfdGhpcztcblx0ICAgIF90aGlzID0gdGhpcztcblx0ICAgIHRoaXMuc29ja2V0Lm9uKCdkZWFsJywgZnVuY3Rpb24oY2FyZCkge1xuXHQgICAgICBjb25zb2xlLmxvZyhjYXJkKTtcblx0ICAgICAgcmV0dXJuIF90aGlzLm15Q2FyZHMucHVzaChjYXJkKTtcblx0ICAgIH0pO1xuXHQgICAgdGhpcy5zb2NrZXQuZW1pdCgnZmVlZCcsIDUpO1xuXHQgICAgcmV0dXJuIHRoaXMuc29ja2V0Lm9uKCdjcmVhdGUnLCBmdW5jdGlvbigpIHtcblx0ICAgICAgcmV0dXJuICQuZWFjaChfdGhpcy5teUNhcmRzLCBmdW5jdGlvbihpbmRleCwgdmFsdWUpIHtcblx0ICAgICAgICB2YXIgJGNhcmQsICRlbmVteWNhcmQsIGNhcmRraW5kLCBudW1iZXI7XG5cdCAgICAgICAgbnVtYmVyID0gdmFsdWVbMV07XG5cdCAgICAgICAgY2FyZGtpbmQgPSB2YWx1ZVswXTtcblx0ICAgICAgICAkY2FyZCA9ICQoJzxsaSBjbGFzcz1cImNhcmRcIj4nKTtcblx0ICAgICAgICAkZW5lbXljYXJkID0gJCgnPGxpIGNsYXNzPVwiY2FyZCBlbmVteVwiPicpO1xuXHQgICAgICAgICRjYXJkLmF0dHIoJ2RhdGEta2luZCcsIGNhcmRraW5kKS5hdHRyKCdkYXRhLW51bScsIG51bWJlcik7XG5cdCAgICAgICAgX3RoaXMuZW5lbXlDYXJkcy5hcHBlbmQoJGVuZW15Y2FyZCk7XG5cdCAgICAgICAgcmV0dXJuIF90aGlzLmNhcmRzLmFwcGVuZCgkY2FyZCk7XG5cdCAgICAgIH0pO1xuXHQgICAgfSk7XG5cdCAgfTtcblx0XG5cdCAgcmV0dXJuIFRydW1wO1xuXHRcblx0fSkoKTtcblx0XG5cdG1vZHVsZS5leHBvcnRzID0gVHJ1bXA7XG5cblxuLyoqKi8gfVxuLyoqKioqKi8gXSk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGNsaWVudC9qcy9jbGllbnQubWluLmpzIiwiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG5cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGV4cG9ydHM6IHt9LFxuIFx0XHRcdGlkOiBtb2R1bGVJZCxcbiBcdFx0XHRsb2FkZWQ6IGZhbHNlXG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiLi9kaXN0L1wiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svYm9vdHN0cmFwIDBiOTdkMGVlNWVkNDM5ZmEyNGNlIiwiI1NlbmRNZXNzYWdlID0gcmVxdWlyZSgnLi9fbW9kdWxlL19zZW5kTWVzc2FnZS5jb2ZmZWUnKVxuVXNlckxpc3QgPSByZXF1aXJlKCcuL191dGlsL19nZXRDbGllbnRMSXN0LmNvZmZlZScpXG5UcnVtcCA9IHJlcXVpcmUoJy4vX2dhbWUvX3RydW1wLmNvZmZlZScpXG4kIC0+XG4gICNzZXJ2ZXIuanPjgafjgrXjg7zjg5DjgpLnq4vjgabjgabjgovmmYLjgavlpbTjgavmjqXntprjgZnjgotcbiAgc29ja2V0ID0gaW8uY29ubmVjdCgnaHR0cDovL2xvY2FsaG9zdDozMDAwJylcbiAgI+ODiOODqeODs+ODl+ODouOCuOODpeODvOODq1xuICB0cnVtcCA9IG5ldyBUcnVtcCgkKCcjdHJ1bXAgLm15Y2FyZHMnKSwkKCcjdHJ1bXAgLmVuZW15Y2FyZHMnKSxzb2NrZXQpXG4gIHRydW1wLmluaXQoKVxuICAj44Om44O844K244O85LiA6Kan5Y+W5b6XXG4gIHVzZXJMaXN0ID0gbmV3IFVzZXJMaXN0KHNvY2tldCwkKCcjdXRpbCAudXNlcmxpc3QnKSlcbiAgdXNlckxpc3QuaW5pdCgpXG4gICPjg6Hjg4Pjgrvjg7zjgrjpgIHkv6Hjg6Ljgrjjg6Xjg7zjg6tcbiMgIHNlbmRNZXNzYWdlID0gbmV3IFNlbmRNZXNzYWdlKCQoJ2Zvcm0nKSwkKCdpbnB1dFtuYW1lPVwibWVzc2FnZVwiXScpLCQoJ3VsJyksc29ja2V0KVxuIyAgc2VuZE1lc3NhZ2UuaW5pdCgpXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9kZXYvY2xpZW50L2pzL2NsaWVudC5jb2ZmZWUiLCJjbGFzcyBHZXRDbGllbnRMaXN0XG4gIGNvbnN0cnVjdG9yOiAoc29ja2V0LHVzZXJsaXN0KS0+XG4gICAgQHNvY2tldCA9IHNvY2tldFxuICAgIEBjbGllbnRMaXN0XG4gICAgQHVzZXJsaXN0ID0gdXNlcmxpc3RcbiAgaW5pdDogLT5cbiAgICBfdGhpcyA9IEBcbiAgICBAc29ja2V0Lm9uICdjbGllbnRMaXN0JywoY2xpZW50TGlzdCkgLT5cbiAgICAgIF90aGlzLmNsaWVudExpc3QgPSBjbGllbnRMaXN0XG4gICAgICBfdGhpcy5zZXRMaXN0cygpXG4gIHNldExpc3RzOiAtPlxuICAgIF90aGlzID0gQFxuICAgIEAkbGlzdFxuICAgICQuZWFjaCBAY2xpZW50TGlzdCwoaW5kZXgsdmFsdWUpIC0+XG4gICAgICBAJGxpc3QgPSAkKCc8bGkgY2xhc3M9XCJ1c2VyXCI+JykudGV4dCh2YWx1ZSlcbiAgICAgIF90aGlzLnVzZXJsaXN0LmFwcGVuZChAJGxpc3QpXG5cbm1vZHVsZS5leHBvcnRzID0gR2V0Q2xpZW50TGlzdFxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Rldi9jbGllbnQvanMvX3V0aWwvX2dldENsaWVudExJc3QuY29mZmVlIiwiY2xhc3MgVHJ1bXBcbiAgY29uc3RydWN0b3I6IChteWNhcmRzLGVuZW15Y2FyZHMsc29ja2V0KS0+XG4gICAgQGNhcmRzID0gbXljYXJkc1xuICAgIEBlbmVteUNhcmRzID0gZW5lbXljYXJkc1xuICAgIEBteUNhcmRzID0gW11cbiAgICBAaW5pdENhcmQgPSA1XG4gICAgQHNvY2tldCA9IHNvY2tldFxuICBpbml0OiAtPlxuICAgIF90aGlzID0gQFxuICAgIEBzb2NrZXQub24gJ2RlYWwnLChjYXJkKS0+XG4gICAgICBjb25zb2xlLmxvZyBjYXJkXG4gICAgICBfdGhpcy5teUNhcmRzLnB1c2goY2FyZClcbiAgICBAc29ja2V0LmVtaXQgJ2ZlZWQnLDVcbiAgICBAc29ja2V0Lm9uICdjcmVhdGUnLC0+XG4gICAgICAkLmVhY2ggX3RoaXMubXlDYXJkcywgKGluZGV4LCB2YWx1ZSkgLT5cbiAgICAgICAgbnVtYmVyID0gdmFsdWVbMV1cbiAgICAgICAgY2FyZGtpbmQgPSB2YWx1ZVswXVxuICAgICAgICAkY2FyZCA9ICQoJzxsaSBjbGFzcz1cImNhcmRcIj4nKVxuICAgICAgICAkZW5lbXljYXJkID0gJCgnPGxpIGNsYXNzPVwiY2FyZCBlbmVteVwiPicpXG4gICAgICAgICRjYXJkLmF0dHIoJ2RhdGEta2luZCcsY2FyZGtpbmQpLmF0dHIoJ2RhdGEtbnVtJyxudW1iZXIpXG4gICAgICAgIF90aGlzLmVuZW15Q2FyZHMuYXBwZW5kKCRlbmVteWNhcmQpXG4gICAgICAgIF90aGlzLmNhcmRzLmFwcGVuZCgkY2FyZClcbm1vZHVsZS5leHBvcnRzID0gVHJ1bXBcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9kZXYvY2xpZW50L2pzL19nYW1lL190cnVtcC5jb2ZmZWUiXSwic291cmNlUm9vdCI6IiJ9