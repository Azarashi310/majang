!function(t){function e(i){if(n[i])return n[i].exports;var o=n[i]={exports:{},id:i,loaded:!1};return t[i].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="./dist/",e(0)}([function(t,e,n){var i;i=n(1),$(function(){var t,e;return e=io.connect("http://localhost:3000"),t=new i($("form"),$('input[name="message"]'),$("ul"),e),t.init()})},function(t,e){var n;n=function(){function t(t,e,n,i){this.form=t,this.input=e,this.$list=n,this.text="",this.socket=i}return t.prototype.init=function(){var t;return t=this,this.form.on("submit",this,this.inputButtonClick),this.socket.on("text",function(e){return console.log(t),t.createText(e)})},t.prototype.createText=function(t){return this.$li=$("<li>").text(t),this.$list.append(this.$li)},t.prototype.inputButtonClick=function(t){var e;return e=t.data,t.preventDefault(),e.text=e.input.val(),e.socket.emit("text",e.text),e.input.val(""),e.createText(e.text)},t}(),t.exports=n}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,