!function(t){function r(e){if(n[e])return n[e].exports;var s=n[e]={exports:{},id:e,loaded:!1};return t[e].call(s.exports,s,s.exports,r),s.loaded=!0,s.exports}var n={};return r.m=t,r.c=n,r.p="./dist/",r(0)}([function(t,r,n){var e;e=n(1),$(function(){var t,r;return t=io.connect("http://localhost:3000"),r=new e($("#trump .mycards"),$("#trump .enemycards"),t),r.init()})},function(t,r){var n;n=function(){function t(t,r,n){this.cards=t,this.enemyCards=r,this.myCards=[],this.initCard=5,this.socket=n}return t.prototype.init=function(){var t;return t=this,this.socket.on("deal",function(r){return console.log(r),t.myCards.push(r),console.log("mycards",t.myCards)}),this.socket.emit("feed",5),this.socket.on("create",function(){return $.each(t.myCards,function(r,n){var e,s,a,o;return o=n[1],a=n[0],e=$('<li class="card">'),s=$('<li class="card enemy">'),e.attr("data-kind",a).attr("data-num",o),t.enemyCards.append(s),t.cards.append(e)})})},t}(),t.exports=n}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,