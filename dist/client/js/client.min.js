!function(t){function r(a){if(n[a])return n[a].exports;var e=n[a]={exports:{},id:a,loaded:!1};return t[a].call(e.exports,e,e.exports,r),e.loaded=!0,e.exports}var n={};return r.m=t,r.c=n,r.p="./dist/",r(0)}([function(t,r,n){var a;a=n(1),$(function(){var t,r;return t=io.connect("http://localhost:3000"),r=new a($("#trump .mycards"),$("#trump .enemycards")),r.init()})},function(t,r){var n;n=function(){function t(t,r){this.cards=t,this.enemyCards=r,this.myCards=[],this.initCard=5}return t.prototype.init=function(){return this.myCards=this.shuffle(),this.createCard(this.myCards)},t.prototype.shuffle=function(){var t,r,n,a;for(t=[],r=0;r<this.initCard;)n=4*Math.random()+1<<0,a=13*Math.random()+1<<0,t.push([n,a]),r++;return t},t.prototype.createCard=function(t){var r;return r=this,$.each(t,function(t,n){var a,e,i,o;return o=n[1],i=r.sort(n),a=$('<li class="card">'),e=$('<li class="card enemy">'),a.attr("data-kind",i).attr("data-num",o),r.enemyCards.append(e),r.cards.append(a)})},t.prototype.sort=function(t){var r,n;return r="",n=t[0],1===n?r="s":2===n?r="h":3===n?r="c":4===n&&(r="d"),r},t}(),t.exports=n}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY2xpZW50L2pzL2NsaWVudC5taW4uanMiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svYm9vdHN0cmFwIDk1ZmZiODkwODM0ODBkZjA3NmE5Iiwid2VicGFjazovLy8uL2Rldi9jbGllbnQvanMvY2xpZW50LmNvZmZlZSIsIndlYnBhY2s6Ly8vLi9kZXYvY2xpZW50L2pzL19nYW1lL190cnVtcC5jb2ZmZWUiXSwibmFtZXMiOlsibW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImluc3RhbGxlZE1vZHVsZXMiLCJleHBvcnRzIiwibW9kdWxlIiwiaWQiLCJsb2FkZWQiLCJjYWxsIiwibSIsImMiLCJwIiwiVHJ1bXAiLCIkIiwic29ja2V0IiwidHJ1bXAiLCJpbyIsImNvbm5lY3QiLCJpbml0IiwibXljYXJkcyIsImVuZW15Y2FyZHMiLCJ0aGlzIiwiY2FyZHMiLCJlbmVteUNhcmRzIiwibXlDYXJkcyIsImluaXRDYXJkIiwicHJvdG90eXBlIiwic2h1ZmZsZSIsImNyZWF0ZUNhcmQiLCJjb3VudGVyIiwicm5kS2luZCIsInJuZE51bSIsIk1hdGgiLCJyYW5kb20iLCJwdXNoIiwiX3RoaXMiLCJlYWNoIiwiaW5kZXgiLCJ2YWx1ZSIsIiRjYXJkIiwiJGVuZW15Y2FyZCIsImNhcmRraW5kIiwibnVtYmVyIiwic29ydCIsImF0dHIiLCJhcHBlbmQiLCJjYXJkIiwia2luZCIsImtpbmRudW0iXSwibWFwcGluZ3MiOiJDQUFTLFNBQVVBLEdDSW5CLFFBQUFDLEdBQUFDLEdBR0EsR0FBQUMsRUFBQUQsR0FDQSxNQUFBQyxHQUFBRCxHQUFBRSxPQUdBLElBQUFDLEdBQUFGLEVBQUFELElBQ0FFLFdBQ0FFLEdBQUFKLEVBQ0FLLFFBQUEsRUFVQSxPQU5BUCxHQUFBRSxHQUFBTSxLQUFBSCxFQUFBRCxRQUFBQyxJQUFBRCxRQUFBSCxHQUdBSSxFQUFBRSxRQUFBLEVBR0FGLEVBQUFELFFBdkJBLEdBQUFELEtBcUNBLE9BVEFGLEdBQUFRLEVBQUFULEVBR0FDLEVBQUFTLEVBQUFQLEVBR0FGLEVBQUFVLEVBQUEsVUFHQVYsRUFBQSxLRE1NLFNBQVNJLEVBQVFELEVBQVNILEdFM0NoQyxHQUFBVyxLQUFRWCxFQUFRLEdBQ2hCWSxFQUFFLFdBRUEsR0FBQUMsR0FBQUMsQ0ZrREMsT0VsRERELEdBQVNFLEdBQUdDLFFBQVEseUJBRXBCRixFQUFZLEdBQUFILEdBQU1DLEVBQUUsbUJBQW1CQSxFQUFFLHVCQUN6Q0UsRUFBTUcsVUZxREYsU0FBU2IsRUFBUUQsR0c1RHZCLEdBQUFRLEVBQU1BLEdBQUEsV0FDUyxRQUFBQSxHQUFDTyxFQUFRQyxHQUNwQkMsS0FBQ0MsTUFBUUgsRUFDVEUsS0FBQ0UsV0FBYUgsRUFDZEMsS0FBQ0csV0FDREgsS0FBQ0ksU0FBVyxFSG9IYixNQWpEQWIsR0FBTWMsVUdsRVBSLEtBQU0sV0hvRUgsTUduRURHLE1BQUNHLFFBQVVILEtBQUNNLFVBQ1pOLEtBQUNPLFdBQVdQLEtBQUNHLFVIcUVkWixFQUFNYyxVR3BFUEMsUUFBUyxXQUNQLEdBQUFMLEdBQUFPLEVBQUFDLEVBQUFDLENBRUEsS0FGQVQsS0FDQU8sRUFBVSxFQUNKQSxFQUFVUixLQUFDSSxVQUVmSyxFQUEwQixFQUFoQkUsS0FBS0MsU0FBZSxHQUFLLEVBRW5DRixFQUF5QixHQUFoQkMsS0FBS0MsU0FBZ0IsR0FBSyxFQUNuQ1gsRUFBTVksTUFBTUosRUFBU0MsSUFDckJGLEdBQ0YsT0FBT1AsSUh1RVJWLEVBQU1jLFVHdEVQRSxXQUFZLFNBQUNOLEdBQ1gsR0FBQWEsRUh3RUMsT0d4RURBLEdBQVFkLEtBQ1JSLEVBQUV1QixLQUFLZCxFQUFPLFNBQUNlLEVBQU9DLEdBQ3BCLEdBQUFDLEdBQUFDLEVBQUFDLEVBQUFDLENIOEVDLE9HOUVEQSxHQUFTSixFQUFNLEdBQ2ZHLEVBQVdOLEVBQU1RLEtBQUtMLEdBQ3RCQyxFQUFRMUIsRUFBRSxxQkFDVjJCLEVBQWEzQixFQUFFLDJCQUNmMEIsRUFBTUssS0FBSyxZQUFZSCxHQUFVRyxLQUFLLFdBQVdGLEdBQ2pEUCxFQUFNWixXQUFXc0IsT0FBT0wsR0FDeEJMLEVBQU1iLE1BQU11QixPQUFPTixNSDRFdEIzQixFQUFNYyxVRzNFUGlCLEtBQU0sU0FBQ0csR0FDTCxHQUFBQyxHQUFBQyxDQVVBLE9BVkFELEdBQU8sR0FDUEMsRUFBVUYsRUFBSyxHQUNELElBQVhFLEVBQ0RELEVBQU8sSUFDVSxJQUFYQyxFQUNORCxFQUFPLElBQ1UsSUFBWEMsRUFDTkQsRUFBTyxJQUNVLElBQVhDLElBQ05ELEVBQU8sS0FDRkEsR0hnRkRuQyxLRy9FVlAsRUFBT0QsUUFBVVEiLCJmaWxlIjoiY2xpZW50L2pzL2NsaWVudC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG4vKioqKioqLyBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbi8qKioqKiovIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4vKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fSxcbi8qKioqKiovIFx0XHRcdGlkOiBtb2R1bGVJZCxcbi8qKioqKiovIFx0XHRcdGxvYWRlZDogZmFsc2Vcbi8qKioqKiovIFx0XHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbi8qKioqKiovIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuLyoqKioqKi8gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIuL2Rpc3QvXCI7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMCk7XG4vKioqKioqLyB9KVxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovIChbXG4vKiAwICovXG4vKioqLyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHR2YXIgVHJ1bXA7XG5cdFxuXHRUcnVtcCA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG5cdFxuXHQkKGZ1bmN0aW9uKCkge1xuXHQgIHZhciBzb2NrZXQsIHRydW1wO1xuXHQgIHNvY2tldCA9IGlvLmNvbm5lY3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcpO1xuXHQgIHRydW1wID0gbmV3IFRydW1wKCQoJyN0cnVtcCAubXljYXJkcycpLCAkKCcjdHJ1bXAgLmVuZW15Y2FyZHMnKSk7XG5cdCAgcmV0dXJuIHRydW1wLmluaXQoKTtcblx0fSk7XG5cblxuLyoqKi8gfSxcbi8qIDEgKi9cbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5cdHZhciBUcnVtcDtcblx0XG5cdFRydW1wID0gKGZ1bmN0aW9uKCkge1xuXHQgIGZ1bmN0aW9uIFRydW1wKG15Y2FyZHMsIGVuZW15Y2FyZHMpIHtcblx0ICAgIHRoaXMuY2FyZHMgPSBteWNhcmRzO1xuXHQgICAgdGhpcy5lbmVteUNhcmRzID0gZW5lbXljYXJkcztcblx0ICAgIHRoaXMubXlDYXJkcyA9IFtdO1xuXHQgICAgdGhpcy5pbml0Q2FyZCA9IDU7XG5cdCAgfVxuXHRcblx0ICBUcnVtcC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCkge1xuXHQgICAgdGhpcy5teUNhcmRzID0gdGhpcy5zaHVmZmxlKCk7XG5cdCAgICByZXR1cm4gdGhpcy5jcmVhdGVDYXJkKHRoaXMubXlDYXJkcyk7XG5cdCAgfTtcblx0XG5cdCAgVHJ1bXAucHJvdG90eXBlLnNodWZmbGUgPSBmdW5jdGlvbigpIHtcblx0ICAgIHZhciBjYXJkcywgY291bnRlciwgcm5kS2luZCwgcm5kTnVtO1xuXHQgICAgY2FyZHMgPSBbXTtcblx0ICAgIGNvdW50ZXIgPSAwO1xuXHQgICAgd2hpbGUgKGNvdW50ZXIgPCB0aGlzLmluaXRDYXJkKSB7XG5cdCAgICAgIHJuZEtpbmQgPSBNYXRoLnJhbmRvbSgpICogNCArIDEgPDwgMDtcblx0ICAgICAgcm5kTnVtID0gTWF0aC5yYW5kb20oKSAqIDEzICsgMSA8PCAwO1xuXHQgICAgICBjYXJkcy5wdXNoKFtybmRLaW5kLCBybmROdW1dKTtcblx0ICAgICAgY291bnRlcisrO1xuXHQgICAgfVxuXHQgICAgcmV0dXJuIGNhcmRzO1xuXHQgIH07XG5cdFxuXHQgIFRydW1wLnByb3RvdHlwZS5jcmVhdGVDYXJkID0gZnVuY3Rpb24oY2FyZHMpIHtcblx0ICAgIHZhciBfdGhpcztcblx0ICAgIF90aGlzID0gdGhpcztcblx0ICAgIHJldHVybiAkLmVhY2goY2FyZHMsIGZ1bmN0aW9uKGluZGV4LCB2YWx1ZSkge1xuXHQgICAgICB2YXIgJGNhcmQsICRlbmVteWNhcmQsIGNhcmRraW5kLCBudW1iZXI7XG5cdCAgICAgIG51bWJlciA9IHZhbHVlWzFdO1xuXHQgICAgICBjYXJka2luZCA9IF90aGlzLnNvcnQodmFsdWUpO1xuXHQgICAgICAkY2FyZCA9ICQoJzxsaSBjbGFzcz1cImNhcmRcIj4nKTtcblx0ICAgICAgJGVuZW15Y2FyZCA9ICQoJzxsaSBjbGFzcz1cImNhcmQgZW5lbXlcIj4nKTtcblx0ICAgICAgJGNhcmQuYXR0cignZGF0YS1raW5kJywgY2FyZGtpbmQpLmF0dHIoJ2RhdGEtbnVtJywgbnVtYmVyKTtcblx0ICAgICAgX3RoaXMuZW5lbXlDYXJkcy5hcHBlbmQoJGVuZW15Y2FyZCk7XG5cdCAgICAgIHJldHVybiBfdGhpcy5jYXJkcy5hcHBlbmQoJGNhcmQpO1xuXHQgICAgfSk7XG5cdCAgfTtcblx0XG5cdCAgVHJ1bXAucHJvdG90eXBlLnNvcnQgPSBmdW5jdGlvbihjYXJkKSB7XG5cdCAgICB2YXIga2luZCwga2luZG51bTtcblx0ICAgIGtpbmQgPSAnJztcblx0ICAgIGtpbmRudW0gPSBjYXJkWzBdO1xuXHQgICAgaWYgKGtpbmRudW0gPT09IDEpIHtcblx0ICAgICAga2luZCA9ICdzJztcblx0ICAgIH0gZWxzZSBpZiAoa2luZG51bSA9PT0gMikge1xuXHQgICAgICBraW5kID0gJ2gnO1xuXHQgICAgfSBlbHNlIGlmIChraW5kbnVtID09PSAzKSB7XG5cdCAgICAgIGtpbmQgPSAnYyc7XG5cdCAgICB9IGVsc2UgaWYgKGtpbmRudW0gPT09IDQpIHtcblx0ICAgICAga2luZCA9ICdkJztcblx0ICAgIH1cblx0ICAgIHJldHVybiBraW5kO1xuXHQgIH07XG5cdFxuXHQgIHJldHVybiBUcnVtcDtcblx0XG5cdH0pKCk7XG5cdFxuXHRtb2R1bGUuZXhwb3J0cyA9IFRydW1wO1xuXG5cbi8qKiovIH1cbi8qKioqKiovIF0pO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBjbGllbnQvanMvY2xpZW50Lm1pbi5qcyIsIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKVxuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuXG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRleHBvcnRzOiB7fSxcbiBcdFx0XHRpZDogbW9kdWxlSWQsXG4gXHRcdFx0bG9hZGVkOiBmYWxzZVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi4vZGlzdC9cIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCA5NWZmYjg5MDgzNDgwZGYwNzZhOSIsIiNTZW5kTWVzc2FnZSA9IHJlcXVpcmUoJy4vX21vZHVsZS9fc2VuZE1lc3NhZ2UuY29mZmVlJylcblRydW1wID0gcmVxdWlyZSgnLi9fZ2FtZS9fdHJ1bXAuY29mZmVlJylcbiQgLT5cbiAgI3NlcnZlci5qc+OBp+OCteODvOODkOOCkueri+OBpuOBpuOCi+aZguOBq+WltOOBq+aOpee2muOBmeOCi1xuICBzb2NrZXQgPSBpby5jb25uZWN0KCdodHRwOi8vbG9jYWxob3N0OjMwMDAnKVxuICAj44OI44Op44Oz44OX44Oi44K444Ol44O844OrXG4gIHRydW1wID0gbmV3IFRydW1wKCQoJyN0cnVtcCAubXljYXJkcycpLCQoJyN0cnVtcCAuZW5lbXljYXJkcycpKVxuICB0cnVtcC5pbml0KClcbiAgI+ODoeODg+OCu+ODvOOCuOmAgeS/oeODouOCuOODpeODvOODq1xuIyAgc2VuZE1lc3NhZ2UgPSBuZXcgU2VuZE1lc3NhZ2UoJCgnZm9ybScpLCQoJ2lucHV0W25hbWU9XCJtZXNzYWdlXCJdJyksJCgndWwnKSxzb2NrZXQpXG4jICBzZW5kTWVzc2FnZS5pbml0KClcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9kZXYvY2xpZW50L2pzL2NsaWVudC5jb2ZmZWUiLCJjbGFzcyBUcnVtcFxuICBjb25zdHJ1Y3RvcjogKG15Y2FyZHMsZW5lbXljYXJkcyktPlxuICAgIEBjYXJkcyA9IG15Y2FyZHNcbiAgICBAZW5lbXlDYXJkcyA9IGVuZW15Y2FyZHNcbiAgICBAbXlDYXJkcyA9IFtdXG4gICAgQGluaXRDYXJkID0gNVxuICBpbml0OiAtPlxuICAgIEBteUNhcmRzID0gQHNodWZmbGUoKVxuICAgIEBjcmVhdGVDYXJkKEBteUNhcmRzKVxuICBzaHVmZmxlOiAtPlxuICAgIGNhcmRzID0gW11cbiAgICBjb3VudGVyID0gMFxuICAgIHdoaWxlIGNvdW50ZXIgPCBAaW5pdENhcmRcbiAgICAgICNjcmVhdGVLaW5kc1xuICAgICAgcm5kS2luZCA9IE1hdGgucmFuZG9tKCkgKiA0ICsgMSA8PCAwXG4gICAgICAjY3JlYXRlTlVtXG4gICAgICBybmROdW0gPSBNYXRoLnJhbmRvbSgpICogMTMgKyAxIDw8IDBcbiAgICAgIGNhcmRzLnB1c2ggW3JuZEtpbmQsIHJuZE51bV1cbiAgICAgIGNvdW50ZXIrK1xuICAgIHJldHVybiBjYXJkc1xuICBjcmVhdGVDYXJkOiAoY2FyZHMpIC0+XG4gICAgX3RoaXMgPSBAXG4gICAgJC5lYWNoIGNhcmRzLCAoaW5kZXgsIHZhbHVlKSAtPlxuICAgICAgbnVtYmVyID0gdmFsdWVbMV1cbiAgICAgIGNhcmRraW5kID0gX3RoaXMuc29ydCh2YWx1ZSlcbiAgICAgICRjYXJkID0gJCgnPGxpIGNsYXNzPVwiY2FyZFwiPicpXG4gICAgICAkZW5lbXljYXJkID0gJCgnPGxpIGNsYXNzPVwiY2FyZCBlbmVteVwiPicpXG4gICAgICAkY2FyZC5hdHRyKCdkYXRhLWtpbmQnLGNhcmRraW5kKS5hdHRyKCdkYXRhLW51bScsbnVtYmVyKVxuICAgICAgX3RoaXMuZW5lbXlDYXJkcy5hcHBlbmQoJGVuZW15Y2FyZClcbiAgICAgIF90aGlzLmNhcmRzLmFwcGVuZCgkY2FyZClcbiAgc29ydDogKGNhcmQpLT5cbiAgICBraW5kID0gJydcbiAgICBraW5kbnVtID0gY2FyZFswXVxuICAgIGlmKGtpbmRudW0gPT0gMSlcbiAgICAgIGtpbmQgPSAncydcbiAgICBlbHNlIGlmKGtpbmRudW0gPT0gMilcbiAgICAgIGtpbmQgPSAnaCdcbiAgICBlbHNlIGlmKGtpbmRudW0gPT0gMylcbiAgICAgIGtpbmQgPSAnYydcbiAgICBlbHNlIGlmKGtpbmRudW0gPT0gNClcbiAgICAgIGtpbmQgPSAnZCdcbiAgICByZXR1cm4ga2luZFxubW9kdWxlLmV4cG9ydHMgPSBUcnVtcFxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Rldi9jbGllbnQvanMvX2dhbWUvX3RydW1wLmNvZmZlZSJdLCJzb3VyY2VSb290IjoiIn0=